apiVersion: v1
kind: Service
metadata:
  name: node-exporter-service
spec:
  selector:
    app: node-exporter
  type: NodePort
  ports:
    - name: metrics
      protocol: TCP
      port: 9100
      targetPort: 9100
      nodePort: 30002

# apiVersion: v1
# kind: Service
# metadata:
#   name: node-exporter-service
# spec:
#   selector:
#     app: node-exporter
#   type: ClusterIP
#   ports:
#     - name: metrics
#       protocol: TCP
#       port: 9100
#       targetPort: 9100


# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   creationTimestamp: '2025-04-12T09:52:04Z'
#   generation: 1
#   managedFields:
#     - apiVersion: networking.k8s.io/v1
#       fieldsType: FieldsV1
#       fieldsV1:
#         f:spec:
#           f:defaultBackend:
#             .: {}
#             f:service:
#               .: {}
#               f:name: {}
#               f:port: {}
#           f:rules: {}
#       manager: agent
#       operation: Update
#       time: '2025-04-12T09:52:04Z'
#   name: node-exporter-ingress
#   namespace: default
#   resourceVersion: '13113'
#   uid: c58fcada-c755-4208-9fdf-45cfdd1301e4
# spec:
#   defaultBackend:
#     service:
#       name: node-exporter-service
#       port:
#         number: 9100
#   rules:
#     - host: k8s-cluster1.xn--hanh-0na.vn
#       http:
#         paths:
#           - backend:
#               service:
#                 name: node-exporter-service
#                 port:
#                   number: 9100
#             path: /node-exporter-svc
#             pathType: Prefix
# status:
#   loadBalancer: {}


apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-configmap
  labels:
    app: prometheus
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s

    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      - job_name: 'node-exporter'
        static_configs:
          - targets: ['k8s-loadbalancer.xn--hanh-0na.vn/node-exporter-cluster1-worker11']


